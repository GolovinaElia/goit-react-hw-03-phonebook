{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","reset","className","style","container","containerForm","this","containerLabel","input","type","autoComplete","pattern","title","required","onChange","button","Component","ContactsList","contacts","onDeleteContact","contactsList","map","contactsItem","contactsForm","contactsName","buttonContacts","onClick","Filter","filter","filterLabel","filterInput","App","contactsArr","addContacts","data","find","contact","toLowerCase","alert","prevState","changeFilter","getVisibleContact","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","phonebook","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa6d36cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__3fmRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__12bgI\"};","import React, { Component } from 'react';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit({ id: uuidv4(), name: name, number: number });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className={style.container}>\n        <form className={style.containerForm} onSubmit={this.handleSubmit}>\n          <label className={style.containerLabel}>\n            Name\n            <input\n              className={style.input}\n              type=\"text\"\n              autoComplete=\"off\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={style.containerLabel}>\n            Number\n            <input\n              className={style.input}\n              type=\"tel\"\n              autoComplete=\"off\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={style.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import style from './ContactList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <div className={style.contacts}>\r\n    <ul className={style.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={uuidv4()} className={style.contactsItem}>\r\n          <p className={style.contactsForm}>\r\n            <span className={style.contactsName}>{name}</span>: {number}\r\n            <button\r\n              className={style.buttonContacts}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={style.filter}>\r\n    <label className={style.filterLabel}>\r\n      Find contact by name\r\n      <input\r\n        className={style.filterInput}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        name=\"name\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport style from './App.module.css';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport contactsArr from './contacts.json';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [...contactsArr],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContacts = data => {\r\n    const { name } = data;\r\n    const { contacts } = this.state;\r\n    const inputName = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (inputName) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, data],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContact();\r\n    return (\r\n      <div className={style.phonebook}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContacts} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__37Osg\",\"buttonContacts\":\"ContactList_buttonContacts__153_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1kgiU\",\"filterInput\":\"Filter_filterInput__1P_qa\"};"],"sourceRoot":""}